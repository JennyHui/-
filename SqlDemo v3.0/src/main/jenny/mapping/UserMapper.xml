<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">

<!-- 通过parameterType，输入参数的类型，完成自动将java对象映射到sql语句中
    在sql语句通过#{}表示占位符号，{}中写变量名,也可以写po的属性名。-->


    <!--根据id查询得到指定对象的num-->
    <select id="getUserNum" parameterType="string"
            resultType="main.jenny.PO.User.User">
        select test2.number from test2 LEFT JOIN test on test.username = #{username};
    </select>

    <!--根据age筛选出user-->
    <select id="getUsers" resultType="main.jenny.PO.User.User">
        select * from test;
    </select>

    <!--根据id查询得到一个user对象-->
    <select id="getUser" parameterType="string"
            resultType="main.jenny.PO.User.User">
        select * from test where username=#{username}
    </select>

    <!--根据id查询得到一个user对象-->
    <select id="getUser2" parameterType="string"
            resultType="main.jenny.PO.User.User">
        select * from test2 where name=#{name}
    </select>

    <!-- 创建用户(Create) -->
    <insert id="assUser" parameterType="main.jenny.PO.User.User">
        insert into test (id,username,age) values (#{id},#{username},#{age}) on DUPLICATE key update id=#{id},username=#{username},age=#{age};
    </insert>

    <!-- 删除用户(Remove) -->
    <delete id="deleteUser" parameterType="string">
        delete from test where username=#{username}
    </delete>

    <!-- 修改用户(Update) -->
    <update id="updateUser" parameterType="main.jenny.PO.User.User">
        update test set username=#{username},age=#{age} where id=#{id}
    </update>

    <!-- 查询全部用户 -->
    <select id="getAllUsers" resultType="main.jenny.PO.User.User">
        select * from test;
    </select>



</mapper>